graph social_network {
    // Dynamic user generation with computed attributes
    let user_count = 5;
    for i in 0..user_count {
        let age = 20 + i * 5;
        let influence = age * 2;
        node "user{i}" :person [
            age=age,
            influence=influence,
            active=true
        ];
    }

    // Create some direct connections
    edge: "user0" -- "user1" [type="friend", strength=0.8];
    edge: "user1" -- "user2" [type="friend", strength=0.7];
    edge: "user2" -- "user3" [type="friend", strength=0.9];

    // Smart connection generator
    generate complete {
        nodes: user_count;
        density: 0.6;
        weight_formula: "age_similarity";
    }

    // Friend recommendation rule - create transitive connections
    rule friend_recommendation {
        lhs {
            node A :person;
            node B :person;
            node C :person;
            edge: A -- B;
            edge: B -- C;
        }
        rhs {
            edge recommendation: A -- C [strength=0.5, type="suggested"];
        }
    }

    // Conditional connections based on age similarity
    if user_count > 3 {
        edge: "user0" -- "user4" [type="age_matched", weight=0.6];
    }

    apply friend_recommendation 2 times;
}
