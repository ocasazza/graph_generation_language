graph chemical_reaction {
    // Reactants and products with dynamic properties
    let temp = 298; // Kelvin
    let pressure = 1.0; // atm
    let activation_energy = 50.0;

    node H2 :molecule [formula="H2", phase="gas", energy=0.0];
    node O2 :molecule [formula="O2", phase="gas", energy=0.0];
    node H2O :molecule [formula="H2O", phase="liquid", energy=-285.8];
    node Pt :catalyst [type="metal", temp=temp, active=true];

    // Basic reaction pathways
    edge: H2 -> H2O [reaction="formation", stoichiometry=2];
    edge: O2 -> H2O [reaction="formation", stoichiometry=1];

    // Catalyst interactions
    edge: Pt -> H2 [interaction="activation", lowers_barrier=true];
    edge: Pt -> O2 [interaction="activation", lowers_barrier=true];

    // Reaction mechanism generator
    generate complete {
        type: "combustion";
        temperature: temp;
        catalyst_present: true;
    }

    // Catalyzed reaction rule - creates product from reactants
    rule catalyzed_formation {
        lhs {
            node R1 :molecule [phase="gas"];
            node R2 :molecule [phase="gas"];
            node C :catalyst [active=true];
        }
        rhs {
            edge: R1 -> H2O [activation_energy=50.0, catalyzed=true];
            edge: R2 -> H2O [activation_energy=50.0, catalyzed=true];
            edge: C -> R1 [interaction="surface_binding"];
        }
    }

    // Energy barrier creation rule
    rule energy_pathway {
        lhs {
            node reactant :molecule [energy=0.0];
            node product :molecule [energy<0.0];
        }
        rhs {
            node transition :energy [
                level=50.0,
                barrier=true
            ];
            edge: reactant -> transition [type="activation"];
            edge: transition -> product [type="formation"];
        }
    }

    // Conditional reaction based on temperature
    if temp > 250 {
        edge: Pt -> H2O [interaction="enhanced_formation", temp_dependent=true];
    }

    apply catalyzed_formation 1 times;
    apply energy_pathway 1 times;
}
